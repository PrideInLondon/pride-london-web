// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<GenericContent/> renders with default values 1`] = `
<p
  key="0"
>
  Hello world!
</p>
`;

exports[`render methods for Generic Content click on typeform button 1`] = `
.c0 {
  padding: 12px 35px;
  border-radius: 4px;
  font-family: Poppins,sans-serif;
  font-size: 1.125rem;
  font-weight: 700;
  line-height: 1.388;
  display: inline-block;
  text-align: center;
  cursor: pointer;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.15s linear,border 0.15s linear;
  transition: background-color 0.15s linear,border 0.15s linear;
  border: 2px solid #2CDA9D;
  background-color: #2CDA9D;
  color: #2D2F7F;
}

.c0:hover,
.c0:focus {
  background-color: #57e2b1;
  border-color: #57e2b1;
}

.c0:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

<span>
  <ReactTypeformEmbed
    autoClose={5}
    autoOpen={false}
    buttonText="Start"
    hideFooter={true}
    hideHeaders={true}
    mode="drawer_left"
    onSubmit={[Function]}
    opacity={100}
    popup={true}
    style={
      Object {
        "zIndex": -1,
      }
    }
    url="https://prideinlondon.typeform.com/to/Z3WuCL"
  >
    <div
      className="ReactTypeformEmbed"
      style={
        Object {
          "height": "100%",
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "top": 0,
          "width": "100%",
          "zIndex": -1,
        }
      }
    />
  </ReactTypeformEmbed>
  <Button
    onClick={[Function]}
    variant="primary"
  >
    <Buttonstyles__StyledButton
      onClick={[Function]}
      renderAs="button"
      variant="primary"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Buttonstyles__StyledButton-sc-8soki7-0",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "padding:12px 35px;border-radius:4px;font-family:",
                "Poppins, sans-serif",
                ";font-size:1.125rem;font-weight:700;line-height:1.388;display:inline-block;text-align:center;cursor:pointer;text-decoration:none;transition:background-color 0.15s linear,border 0.15s linear;",
                [Function],
                " &:disabled{opacity:0.5;cursor:not-allowed;}",
                [Function],
              ],
            },
            "displayName": "Buttonstyles__StyledButton",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Buttonstyles__StyledButton-sc-8soki7-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        onClick={[Function]}
        renderAs="button"
        variant="primary"
      >
        <Component
          className="c0"
          onClick={[Function]}
          renderAs="button"
          variant="primary"
        >
          <button
            className="c0"
            onClick={[Function]}
            variant="primary"
          >
            Button typeform type
          </button>
        </Component>
      </StyledComponent>
    </Buttonstyles__StyledButton>
  </Button>
</span>
`;

exports[`render methods for Generic Content click on typeform button 2`] = `
.c0 {
  padding: 12px 35px;
  border-radius: 4px;
  font-family: Poppins,sans-serif;
  font-size: 1.125rem;
  font-weight: 700;
  line-height: 1.388;
  display: inline-block;
  text-align: center;
  cursor: pointer;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.15s linear,border 0.15s linear;
  transition: background-color 0.15s linear,border 0.15s linear;
  border: 2px solid #2CDA9D;
  background-color: #2CDA9D;
  color: #2D2F7F;
}

.c0:hover,
.c0:focus {
  background-color: #57e2b1;
  border-color: #57e2b1;
}

.c0:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

<span>
  <ReactTypeformEmbed
    autoClose={5}
    autoOpen={false}
    buttonText="Start"
    hideFooter={true}
    hideHeaders={true}
    mode="drawer_left"
    onSubmit={[Function]}
    opacity={100}
    popup={true}
    style={
      Object {
        "zIndex": -1,
      }
    }
    url="https://prideinlondon.typeform.com/to/Z3WuCL"
  >
    <div
      className="ReactTypeformEmbed"
      style={
        Object {
          "height": "100%",
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "top": 0,
          "width": "100%",
          "zIndex": -1,
        }
      }
    />
  </ReactTypeformEmbed>
  <Button
    onClick={[Function]}
    variant="primary"
  >
    <Buttonstyles__StyledButton
      onClick={[Function]}
      renderAs="button"
      variant="primary"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Buttonstyles__StyledButton-sc-8soki7-0",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "padding:12px 35px;border-radius:4px;font-family:",
                "Poppins, sans-serif",
                ";font-size:1.125rem;font-weight:700;line-height:1.388;display:inline-block;text-align:center;cursor:pointer;text-decoration:none;transition:background-color 0.15s linear,border 0.15s linear;",
                [Function],
                " &:disabled{opacity:0.5;cursor:not-allowed;}",
                [Function],
              ],
            },
            "displayName": "Buttonstyles__StyledButton",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Buttonstyles__StyledButton-sc-8soki7-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        onClick={[Function]}
        renderAs="button"
        variant="primary"
      >
        <Component
          className="c0"
          onClick={[Function]}
          renderAs="button"
          variant="primary"
        >
          <button
            className="c0"
            onClick={[Function]}
            variant="primary"
          >
            Button typeform type
          </button>
        </Component>
      </StyledComponent>
    </Buttonstyles__StyledButton>
  </Button>
</span>
`;

exports[`render methods for Generic Content renders a Figure component for images 1`] = `
<styles__StyledFigure>
  <img
    alt="Hello World"
    src="src"
  />
  <figcaption>
    Image description
  </figcaption>
</styles__StyledFigure>
`;

exports[`render methods for Generic Content renders a button component if the content is null 1`] = `<span />`;

exports[`render methods for Generic Content renders a button component if the id is button 1`] = `
<Buttonstyles__StyledButton
  href="https://prideinlondon.org/who-we-are"
  marginBottom="1.25em"
  rel="noopener noreferrer"
  renderAs="a"
  target="_blank"
  to="https://prideinlondon.org/who-we-are"
  variant="primary"
>
  Button primary type
</Buttonstyles__StyledButton>
`;

exports[`render methods for Generic Content renders a null if the id is not recognized 1`] = `<span />`;

exports[`render methods for Generic Content renders a sponsor section component if the id is sponsorSection 1`] = `
<Fragment>
  <styles__TitleWrapper>
    <styles__Title>
      Test Sponsor Section
    </styles__Title>
  </styles__TitleWrapper>
  <styles__BadgesContainer>
    <SponsorBadge
      key="Virtucon"
      level="Headline"
      logo="//images.ctfassets.net/n2o4hgsv6wcx/2AfZNrit52m4WUm4IKUOOE/21323f2171228d475743a62938778c53/ed2cf58359281c503c8fd2d56992b0a9.png?w=800&h=168&q=90"
      name="Virtucon"
      preventLevelSize={true}
      url="https://m.popkey.co/666ded/1VRvJ.gif"
    />
  </styles__BadgesContainer>
</Fragment>
`;

exports[`render methods for Generic Content renders a typeform button component if the id is button 1`] = `
<span>
  <ReactTypeformEmbed
    autoClose={5}
    autoOpen={false}
    buttonText="Start"
    hideFooter={true}
    hideHeaders={true}
    mode="drawer_left"
    onSubmit={[Function]}
    opacity={100}
    popup={true}
    style={
      Object {
        "zIndex": -1,
      }
    }
    url="https://prideinlondon.typeform.com/to/Z3WuCL"
  />
  <Button
    onClick={[Function]}
    variant="primary"
  >
    Button typeform type
  </Button>
</span>
`;

exports[`render methods for Generic Content renders a video component if the id is video 1`] = `
<styles__VideoContainer>
  <iframe
    allowFullScreen={true}
    frameBorder="0"
    src="https://www.youtube.com/embed/7ge36or-nz4"
    title="Youtube video"
  />
</styles__VideoContainer>
`;
