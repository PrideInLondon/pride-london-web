// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PagedCardContainer renders component with default props 1`] = `
<Fragment>
  <pagedCardContainer__PaddedCardContainer
    CardComponent={[Function]}
    cardContent={Array []}
    isFullyLoaded={true}
  />
</Fragment>
`;

exports[`PagedCardContainer renders component with specified non-default props 1`] = `
.c5 {
  padding: 10px 5px;
}

.c5.c5 {
  margin-left: auto;
  margin-right: auto;
  padding-top: 30px;
}

.c2 {
  margin-left: 5px;
  margin-right: 5px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  margin-left: 5px;
  margin-right: 5px;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4.c4 {
  padding-bottom: 30px;
}

.c1 {
  margin-left: auto;
  margin-right: auto;
}

.c3 {
  padding: 10px 5px;
  width: 100%;
  display: block;
}

.c3.c3 {
  padding-top: 8px;
  padding-bottom: 8px;
}

.c6 {
  padding: 12px 35px;
  border-radius: 4px;
  font-family: Poppins,sans-serif;
  font-size: 1.125rem;
  font-weight: 700;
  line-height: 1.388;
  display: inline-block;
  text-align: center;
  cursor: pointer;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: background-color 0.15s linear,border 0.15s linear;
  transition: background-color 0.15s linear,border 0.15s linear;
  border: 2px solid #2CDA9D;
  background-color: #2CDA9D;
  color: #2D2F7F;
}

.c6:hover,
.c6:focus {
  background-color: #57e2b1;
  border-color: #57e2b1;
}

.c6:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.c0 {
  padding-bottom: 0px;
}

@media screen and (min-width:375px) {
  .c5 {
    padding: 10px;
  }
}

@media screen and (min-width:1024px) {
  .c5 {
    padding: 10px 15px;
  }
}

@media screen and (min-width:40em) {
  .c5.c5 {
    padding-top: 30px;
  }
}

@media screen and (min-width:52em) {
  .c5.c5 {
    padding-top: 50px;
  }
}

@media screen and (min-width:375px) {
  .c2 {
    margin-left: 10px;
    margin-right: 10px;
  }
}

@media screen and (min-width:768px) {
  .c2 {
    margin-left: 40px;
    margin-right: 40px;
  }
}

@media screen and (min-width:1024px) {
  .c2 {
    margin-left: 75px;
    margin-right: 75px;
  }
}

@media screen and (min-width:375px) {
  .c4 {
    margin-left: 10px;
    margin-right: 10px;
  }
}

@media screen and (min-width:768px) {
  .c4 {
    margin-left: 40px;
    margin-right: 40px;
  }
}

@media screen and (min-width:1024px) {
  .c4 {
    margin-left: 75px;
    margin-right: 75px;
  }
}

@media screen and (min-width:40em) {
  .c4.c4 {
    padding-bottom: 30px;
  }
}

@media screen and (min-width:52em) {
  .c4.c4 {
    padding-bottom: 50px;
  }
}

@media screen and (min-width:375px) {
  .c1 {
    min-width: 335px;
  }
}

@media screen and (min-width:768px) {
  .c1 {
    min-width: 668px;
  }
}

@media screen and (min-width:1024px) {
  .c1 {
    min-width: 960px;
  }
}

@media screen and (min-width:1440px) {
  .c1 {
    min-width: 1260px;
    max-width: 1440px;
  }
}

@media screen and (min-width:375px) {
  .c3 {
    padding: 10px;
  }
}

@media screen and (min-width:1024px) {
  .c3 {
    padding: 10px 15px;
  }
}

@media screen and (min-width:40em) {
  .c3.c3 {
    padding-top: 8px;
    padding-bottom: 8px;
  }
}

@media screen and (min-width:52em) {
  .c3.c3 {
    padding-top: 8px;
    padding-bottom: 8px;
  }
}

@media screen and (min-width:64em) {
  .c3.c3 {
    padding-top: 16px;
    padding-bottom: 16px;
  }
}

@media screen and (min-width:40em) {
  .c3 {
    width: 100%;
  }
}

@media screen and (min-width:52em) {
  .c3 {
    width: 50%;
  }
}

@media screen and (min-width:64em) {
  .c3 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:768px) {
  .c3 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
  }
}

<PagedCardContainer
  CardComponent={[Function]}
  cardContent={
    Array [
      Object {
        "id": "id-foo",
        "text": "text-foo",
      },
      Object {
        "id": "id-bar",
        "text": "text-bar",
      },
      Object {
        "id": "id-baz",
        "text": "text-baz",
      },
    ]
  }
  moreCardsToShow={true}
  onShowMoreButtonClick={[MockFunction]}
  showMoreButtonText="Show More Foo"
>
  <pagedCardContainer__PaddedCardContainer
    CardComponent={[Function]}
    cardContent={
      Array [
        Object {
          "id": "id-foo",
          "text": "text-foo",
        },
        Object {
          "id": "id-bar",
          "text": "text-bar",
        },
        Object {
          "id": "id-baz",
          "text": "text-baz",
        },
      ]
    }
    isFullyLoaded={false}
  >
    <StyledComponent
      CardComponent={[Function]}
      cardContent={
        Array [
          Object {
            "id": "id-foo",
            "text": "text-foo",
          },
          Object {
            "id": "id-bar",
            "text": "text-bar",
          },
          Object {
            "id": "id-baz",
            "text": "text-baz",
          },
        ]
      }
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              [Function],
            ],
          },
          "displayName": "pagedCardContainer__PaddedCardContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      isFullyLoaded={false}
    >
      <CardContainer
        CardComponent={[Function]}
        cardContent={
          Array [
            Object {
              "id": "id-foo",
              "text": "text-foo",
            },
            Object {
              "id": "id-bar",
              "text": "text-bar",
            },
            Object {
              "id": "id-baz",
              "text": "text-baz",
            },
          ]
        }
        className="c0"
        isFullyLoaded={false}
      >
        <Gridstyles__Container
          className="c0"
          mx="auto"
        >
          <StyledComponent
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "_foldedDefaultProps": Object {
                  "mx": "auto",
                },
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Gridstyles__Container-jfdl1j-2",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "@media screen and (min-width: 375px)",
                    "{min-width:335px;}",
                    "@media screen and (min-width: 768px)",
                    "{min-width:668px;}",
                    "@media screen and (min-width: 1024px)",
                    "{min-width:960px;}",
                    "@media screen and (min-width: 1440px)",
                    "{min-width:1260px;max-width:",
                    "1440",
                    "px;}",
                    [Function],
                    " ",
                    [Function],
                    " ",
                    [Function],
                  ],
                },
                "displayName": "Gridstyles__Container",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Gridstyles__Container-jfdl1j-2",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            mx="auto"
          >
            <div
              className="c1 c0"
            >
              <Gridstyles__Row
                display="flex"
                flexWrap="wrap"
              >
                <StyledComponent
                  display="flex"
                  flexWrap="wrap"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "_foldedDefaultProps": Object {
                        "display": "flex",
                        "flexWrap": "wrap",
                      },
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Gridstyles__Row-jfdl1j-1",
                        "isStatic": false,
                        "lastClassName": "c4",
                        "rules": Array [
                          "margin-left:5px;margin-right:5px;",
                          "@media screen and (min-width: 375px)",
                          "{margin-left:10px;margin-right:10px;}",
                          "@media screen and (min-width: 768px)",
                          "{margin-left:40px;margin-right:40px;}",
                          "@media screen and (min-width: 1024px)",
                          "{margin-left:75px;margin-right:75px;}&&{",
                          [Function],
                          "}",
                          [Function],
                          " ",
                          [Function],
                          " ",
                          [Function],
                        ],
                      },
                      "displayName": "Gridstyles__Row",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="c2"
                    display="flex"
                  >
                    <Gridstyles__FlexColumn
                      key="id-foo"
                      py={
                        Array [
                          2,
                          2,
                          2,
                          3,
                        ]
                      }
                      width={
                        Array [
                          1,
                          1,
                          0.5,
                          0.3333333333333333,
                        ]
                      }
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "padding:10px 5px;",
                                "@media screen and (min-width: 375px)",
                                "{padding:10px;}",
                                "@media screen and (min-width: 1024px)",
                                "{padding:10px 15px;}&&{",
                                [Function],
                                "}",
                                [Function],
                                "display:block;",
                                "@media screen and (min-width: 768px)",
                                "{display:flex;}",
                              ],
                            },
                            "displayName": "Gridstyles__FlexColumn",
                            "foldedComponentIds": Array [
                              "Gridstyles__Column-jfdl1j-0",
                            ],
                            "render": [Function],
                            "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <div
                          className="c3"
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <CardComponent
                            text="text-foo"
                          >
                            <div>
                              text-foo
                            </div>
                          </CardComponent>
                        </div>
                      </StyledComponent>
                    </Gridstyles__FlexColumn>
                    <Gridstyles__FlexColumn
                      key="id-bar"
                      py={
                        Array [
                          2,
                          2,
                          2,
                          3,
                        ]
                      }
                      width={
                        Array [
                          1,
                          1,
                          0.5,
                          0.3333333333333333,
                        ]
                      }
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "padding:10px 5px;",
                                "@media screen and (min-width: 375px)",
                                "{padding:10px;}",
                                "@media screen and (min-width: 1024px)",
                                "{padding:10px 15px;}&&{",
                                [Function],
                                "}",
                                [Function],
                                "display:block;",
                                "@media screen and (min-width: 768px)",
                                "{display:flex;}",
                              ],
                            },
                            "displayName": "Gridstyles__FlexColumn",
                            "foldedComponentIds": Array [
                              "Gridstyles__Column-jfdl1j-0",
                            ],
                            "render": [Function],
                            "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <div
                          className="c3"
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <CardComponent
                            text="text-bar"
                          >
                            <div>
                              text-bar
                            </div>
                          </CardComponent>
                        </div>
                      </StyledComponent>
                    </Gridstyles__FlexColumn>
                    <Gridstyles__FlexColumn
                      key="id-baz"
                      py={
                        Array [
                          2,
                          2,
                          2,
                          3,
                        ]
                      }
                      width={
                        Array [
                          1,
                          1,
                          0.5,
                          0.3333333333333333,
                        ]
                      }
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "padding:10px 5px;",
                                "@media screen and (min-width: 375px)",
                                "{padding:10px;}",
                                "@media screen and (min-width: 1024px)",
                                "{padding:10px 15px;}&&{",
                                [Function],
                                "}",
                                [Function],
                                "display:block;",
                                "@media screen and (min-width: 768px)",
                                "{display:flex;}",
                              ],
                            },
                            "displayName": "Gridstyles__FlexColumn",
                            "foldedComponentIds": Array [
                              "Gridstyles__Column-jfdl1j-0",
                            ],
                            "render": [Function],
                            "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <div
                          className="c3"
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <CardComponent
                            text="text-baz"
                          >
                            <div>
                              text-baz
                            </div>
                          </CardComponent>
                        </div>
                      </StyledComponent>
                    </Gridstyles__FlexColumn>
                  </div>
                </StyledComponent>
              </Gridstyles__Row>
            </div>
          </StyledComponent>
        </Gridstyles__Container>
      </CardContainer>
    </StyledComponent>
  </pagedCardContainer__PaddedCardContainer>
  <ShowMoreButton
    onClick={[MockFunction]}
    text="Show More Foo"
  >
    <Gridstyles__Row
      display="flex"
      flexWrap="wrap"
      pb={
        Array [
          30,
          30,
          50,
        ]
      }
    >
      <StyledComponent
        display="flex"
        flexWrap="wrap"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "display": "flex",
              "flexWrap": "wrap",
            },
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Gridstyles__Row-jfdl1j-1",
              "isStatic": false,
              "lastClassName": "c4",
              "rules": Array [
                "margin-left:5px;margin-right:5px;",
                "@media screen and (min-width: 375px)",
                "{margin-left:10px;margin-right:10px;}",
                "@media screen and (min-width: 768px)",
                "{margin-left:40px;margin-right:40px;}",
                "@media screen and (min-width: 1024px)",
                "{margin-left:75px;margin-right:75px;}&&{",
                [Function],
                "}",
                [Function],
                " ",
                [Function],
                " ",
                [Function],
              ],
            },
            "displayName": "Gridstyles__Row",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Gridstyles__Row-jfdl1j-1",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        pb={
          Array [
            30,
            30,
            50,
          ]
        }
      >
        <div
          className="c4"
          display="flex"
        >
          <Gridstyles__Column
            mx="auto"
            pt={
              Array [
                30,
                30,
                50,
              ]
            }
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Column-jfdl1j-0",
                    "isStatic": false,
                    "lastClassName": "c5",
                    "rules": Array [
                      "padding:10px 5px;",
                      "@media screen and (min-width: 375px)",
                      "{padding:10px;}",
                      "@media screen and (min-width: 1024px)",
                      "{padding:10px 15px;}&&{",
                      [Function],
                      "}",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Column",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Column-jfdl1j-0",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              mx="auto"
              pt={
                Array [
                  30,
                  30,
                  50,
                ]
              }
            >
              <div
                className="c5"
              >
                <Button
                  onClick={[MockFunction]}
                  variant="primary"
                >
                  <Buttonstyles__StyledButton
                    onClick={[MockFunction]}
                    renderAs="button"
                    variant="primary"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "Buttonstyles__StyledButton-sc-8soki7-0",
                            "isStatic": false,
                            "lastClassName": "c6",
                            "rules": Array [
                              "padding:12px 35px;border-radius:4px;font-family:",
                              "Poppins, sans-serif",
                              ";font-size:1.125rem;font-weight:700;line-height:1.388;display:inline-block;text-align:center;cursor:pointer;text-decoration:none;transition:background-color 0.15s linear,border 0.15s linear;",
                              [Function],
                              " &:disabled{opacity:0.5;cursor:not-allowed;}",
                              [Function],
                            ],
                          },
                          "displayName": "Buttonstyles__StyledButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "Buttonstyles__StyledButton-sc-8soki7-0",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[MockFunction]}
                      renderAs="button"
                      variant="primary"
                    >
                      <Component
                        className="c6"
                        onClick={[MockFunction]}
                        renderAs="button"
                        variant="primary"
                      >
                        <button
                          className="c6"
                          onClick={[MockFunction]}
                          variant="primary"
                        >
                          Show More Foo
                        </button>
                      </Component>
                    </StyledComponent>
                  </Buttonstyles__StyledButton>
                </Button>
              </div>
            </StyledComponent>
          </Gridstyles__Column>
        </div>
      </StyledComponent>
    </Gridstyles__Row>
  </ShowMoreButton>
</PagedCardContainer>
`;
