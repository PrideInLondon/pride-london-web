// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FilteredPagedCardContainer renders component with filter type checkbox 1`] = `
<Fragment>
  <FilterContainer
    categories={
      Array [
        Object {
          "hexColour": "#all",
          "title": "all",
        },
        Object {
          "hexColour": "#foo",
          "title": "foo",
        },
        Object {
          "hexColour": "#bar",
          "title": "bar",
        },
      ]
    }
    filterType="checkbox"
    handleFilterSelect={[Function]}
    selected={
      Array [
        "all",
      ]
    }
  />
  <PagedCardContainer
    CardComponent={[Function]}
    cardContent={
      Array [
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo0",
          "text": "text-foo0",
        },
        Object {
          "category": Array [
            "bar",
          ],
          "id": "id-bar1",
          "text": "text-bar1",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo2",
          "text": "text-foo2",
        },
      ]
    }
    moreCardsToShow={false}
    onShowMoreButtonClick={[Function]}
    pageSize={3}
    showMoreButtonText="Show more"
  />
</Fragment>
`;

exports[`FilteredPagedCardContainer renders component with filter type radio 1`] = `
<Fragment>
  <FilterContainer
    categories={
      Array [
        Object {
          "hexColour": "#all",
          "title": "all",
        },
        Object {
          "hexColour": "#foo",
          "title": "foo",
        },
        Object {
          "hexColour": "#bar",
          "title": "bar",
        },
      ]
    }
    filterType="radio"
    handleFilterSelect={[Function]}
    selected="all"
  />
  <PagedCardContainer
    CardComponent={[Function]}
    cardContent={
      Array [
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo0",
          "text": "text-foo0",
        },
        Object {
          "category": Array [
            "bar",
          ],
          "id": "id-bar1",
          "text": "text-bar1",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo2",
          "text": "text-foo2",
        },
      ]
    }
    moreCardsToShow={false}
    onShowMoreButtonClick={[Function]}
    pageSize={3}
    showMoreButtonText="Show more"
  />
</Fragment>
`;

exports[`FilteredPagedCardContainer with checkbox filter type shows more cards when the "show more" button is clicked 1`] = `
<FilteredPagedCardContainer
  CardComponent={[Function]}
  cardContent={
    Array [
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo0",
        "text": "text-foo0",
      },
      Object {
        "category": Array [
          "bar",
        ],
        "id": "id-bar1",
        "text": "text-bar1",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo2",
        "text": "text-foo2",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo3",
        "text": "text-foo3",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo4",
        "text": "text-foo4",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo5",
        "text": "text-foo5",
      },
    ]
  }
  categories={
    Array [
      Object {
        "hexColour": "#all",
        "title": "all",
      },
      Object {
        "hexColour": "#foo",
        "title": "foo",
      },
      Object {
        "hexColour": "#bar",
        "title": "bar",
      },
    ]
  }
  filterType="checkbox"
  pageSize={3}
  showAllCategoryTitle="all"
  showMoreButtonText="Show more"
>
  <FilterContainer
    categories={
      Array [
        Object {
          "hexColour": "#all",
          "title": "all",
        },
        Object {
          "hexColour": "#foo",
          "title": "foo",
        },
        Object {
          "hexColour": "#bar",
          "title": "bar",
        },
      ]
    }
    filterType="checkbox"
    handleFilterSelect={[Function]}
    selected={
      Array [
        "foo",
      ]
    }
  >
    <Gridstyles__Container
      mx="auto"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "mx": "auto",
            },
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Gridstyles__Container-jfdl1j-2",
              "isStatic": false,
              "lastClassName": "byHCwx",
              "rules": Array [
                "@media screen and (min-width: 375px)",
                "{min-width:335px;}",
                "@media screen and (min-width: 768px)",
                "{min-width:668px;}",
                "@media screen and (min-width: 1024px)",
                "{min-width:960px;}",
                "@media screen and (min-width: 1440px)",
                "{min-width:1260px;max-width:",
                "1440",
                "px;}",
                [Function],
                " ",
                [Function],
                " ",
                [Function],
              ],
            },
            "displayName": "Gridstyles__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Gridstyles__Container-jfdl1j-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        mx="auto"
      >
        <div
          className="Gridstyles__Container-jfdl1j-2 byHCwx"
        >
          <Gridstyles__Row
            display="flex"
            flexWrap="wrap"
          >
            <StyledComponent
              display="flex"
              flexWrap="wrap"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "display": "flex",
                    "flexWrap": "wrap",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Row-jfdl1j-1",
                    "isStatic": false,
                    "lastClassName": "ihaaWG",
                    "rules": Array [
                      "margin-left:5px;margin-right:5px;",
                      "@media screen and (min-width: 375px)",
                      "{margin-left:10px;margin-right:10px;}",
                      "@media screen and (min-width: 768px)",
                      "{margin-left:40px;margin-right:40px;}",
                      "@media screen and (min-width: 1024px)",
                      "{margin-left:75px;margin-right:75px;}&&{",
                      [Function],
                      "}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Row",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                display="flex"
              >
                <Gridstyles__Column
                  py={
                    Array [
                      20,
                      20,
                      40,
                    ]
                  }
                  width={1}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Column-jfdl1j-0",
                          "isStatic": false,
                          "lastClassName": "jnwtYj",
                          "rules": Array [
                            "padding:10px 5px;",
                            "@media screen and (min-width: 375px)",
                            "{padding:10px;}",
                            "@media screen and (min-width: 1024px)",
                            "{padding:10px 15px;}&&{",
                            [Function],
                            "}",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Column",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Column-jfdl1j-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    py={
                      Array [
                        20,
                        20,
                        40,
                      ]
                    }
                    width={1}
                  >
                    <div
                      className="Gridstyles__Column-jfdl1j-0 jnwtYj"
                      width={1}
                    >
                      <styles__FilterContainerWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styles__FilterContainerWrapper-kd1mao-0",
                                "isStatic": false,
                                "lastClassName": "kWUFNq",
                                "rules": Array [
                                  "display:flex;flex-wrap:wrap;justify-content:center;",
                                ],
                              },
                              "displayName": "styles__FilterContainerWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styles__FilterContainerWrapper-kd1mao-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="styles__FilterContainerWrapper-kd1mao-0 kWUFNq"
                          >
                            <FilterLabel
                              filterColour="#all"
                              filterName="all"
                              filterType="checkbox"
                              handleSelect={[Function]}
                              id="all"
                              isSelected={false}
                              key="all"
                            >
                              <styles__Label
                                backgroundColor="#all"
                                htmlFor="all"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#all"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="all"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 cGlsrw"
                                    htmlFor="all"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          all
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="all"
                                      id="all"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="checkbox"
                                      value="all"
                                    >
                                      <StyledComponent
                                        aria-label="all"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="all"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="checkbox"
                                        value="all"
                                      >
                                        <input
                                          aria-label="all"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="all"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value="all"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#foo"
                              filterName="foo"
                              filterType="checkbox"
                              handleSelect={[Function]}
                              id="foo"
                              isSelected={true}
                              key="foo"
                            >
                              <styles__Label
                                backgroundColor="#foo"
                                htmlFor="foo"
                                isSelected={true}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#foo"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="foo"
                                  isSelected={true}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gdJNpr"
                                    htmlFor="foo"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          foo
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="foo"
                                      id="foo"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="checkbox"
                                      value="foo"
                                    >
                                      <StyledComponent
                                        aria-label="foo"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="foo"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="checkbox"
                                        value="foo"
                                      >
                                        <input
                                          aria-label="foo"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="foo"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value="foo"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#bar"
                              filterName="bar"
                              filterType="checkbox"
                              handleSelect={[Function]}
                              id="bar"
                              isSelected={false}
                              key="bar"
                            >
                              <styles__Label
                                backgroundColor="#bar"
                                htmlFor="bar"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#bar"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="bar"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gBUgEB"
                                    htmlFor="bar"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          bar
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="bar"
                                      id="bar"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="checkbox"
                                      value="bar"
                                    >
                                      <StyledComponent
                                        aria-label="bar"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="bar"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="checkbox"
                                        value="bar"
                                      >
                                        <input
                                          aria-label="bar"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="bar"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value="bar"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                          </div>
                        </StyledComponent>
                      </styles__FilterContainerWrapper>
                    </div>
                  </StyledComponent>
                </Gridstyles__Column>
              </div>
            </StyledComponent>
          </Gridstyles__Row>
        </div>
      </StyledComponent>
    </Gridstyles__Container>
  </FilterContainer>
  <PagedCardContainer
    CardComponent={[Function]}
    cardContent={
      Array [
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo0",
          "text": "text-foo0",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo2",
          "text": "text-foo2",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo3",
          "text": "text-foo3",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo4",
          "text": "text-foo4",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo5",
          "text": "text-foo5",
        },
      ]
    }
    moreCardsToShow={false}
    onShowMoreButtonClick={[Function]}
    pageSize={3}
    showMoreButtonText="Show more"
  >
    <pagedCardContainer__PaddedCardContainer
      CardComponent={[Function]}
      cardContent={
        Array [
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo0",
            "text": "text-foo0",
          },
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo2",
            "text": "text-foo2",
          },
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo3",
            "text": "text-foo3",
          },
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo4",
            "text": "text-foo4",
          },
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo5",
            "text": "text-foo5",
          },
        ]
      }
      isFullyLoaded={true}
    >
      <StyledComponent
        CardComponent={[Function]}
        cardContent={
          Array [
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo0",
              "text": "text-foo0",
            },
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo2",
              "text": "text-foo2",
            },
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo3",
              "text": "text-foo3",
            },
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo4",
              "text": "text-foo4",
            },
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo5",
              "text": "text-foo5",
            },
          ]
        }
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
              "isStatic": false,
              "lastClassName": "iMbSNm",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "pagedCardContainer__PaddedCardContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isFullyLoaded={true}
      >
        <CardContainer
          CardComponent={[Function]}
          cardContent={
            Array [
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo0",
                "text": "text-foo0",
              },
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo2",
                "text": "text-foo2",
              },
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo3",
                "text": "text-foo3",
              },
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo4",
                "text": "text-foo4",
              },
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo5",
                "text": "text-foo5",
              },
            ]
          }
          className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
          isFullyLoaded={true}
        >
          <Gridstyles__Container
            className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
            mx="auto"
          >
            <StyledComponent
              className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "mx": "auto",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Container-jfdl1j-2",
                    "isStatic": false,
                    "lastClassName": "byHCwx",
                    "rules": Array [
                      "@media screen and (min-width: 375px)",
                      "{min-width:335px;}",
                      "@media screen and (min-width: 768px)",
                      "{min-width:668px;}",
                      "@media screen and (min-width: 1024px)",
                      "{min-width:960px;}",
                      "@media screen and (min-width: 1440px)",
                      "{min-width:1260px;max-width:",
                      "1440",
                      "px;}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Container",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Container-jfdl1j-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              mx="auto"
            >
              <div
                className="Gridstyles__Container-jfdl1j-2 byHCwx pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
              >
                <Gridstyles__Row
                  display="flex"
                  flexWrap="wrap"
                >
                  <StyledComponent
                    display="flex"
                    flexWrap="wrap"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "_foldedDefaultProps": Object {
                          "display": "flex",
                          "flexWrap": "wrap",
                        },
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Row-jfdl1j-1",
                          "isStatic": false,
                          "lastClassName": "ihaaWG",
                          "rules": Array [
                            "margin-left:5px;margin-right:5px;",
                            "@media screen and (min-width: 375px)",
                            "{margin-left:10px;margin-right:10px;}",
                            "@media screen and (min-width: 768px)",
                            "{margin-left:40px;margin-right:40px;}",
                            "@media screen and (min-width: 1024px)",
                            "{margin-left:75px;margin-right:75px;}&&{",
                            [Function],
                            "}",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Row",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                      display="flex"
                    >
                      <Gridstyles__FlexColumn
                        key="id-foo0"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo0"
                            >
                              <div>
                                text-foo0
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                      <Gridstyles__FlexColumn
                        key="id-foo2"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo2"
                            >
                              <div>
                                text-foo2
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                      <Gridstyles__FlexColumn
                        key="id-foo3"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo3"
                            >
                              <div>
                                text-foo3
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                      <Gridstyles__FlexColumn
                        key="id-foo4"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo4"
                            >
                              <div>
                                text-foo4
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                      <Gridstyles__FlexColumn
                        key="id-foo5"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo5"
                            >
                              <div>
                                text-foo5
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                    </div>
                  </StyledComponent>
                </Gridstyles__Row>
              </div>
            </StyledComponent>
          </Gridstyles__Container>
        </CardContainer>
      </StyledComponent>
    </pagedCardContainer__PaddedCardContainer>
  </PagedCardContainer>
</FilteredPagedCardContainer>
`;

exports[`FilteredPagedCardContainer with checkbox filter type snaps back to one page displayed on filter change 1`] = `
<FilteredPagedCardContainer
  CardComponent={[Function]}
  cardContent={
    Array [
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo0",
        "text": "text-foo0",
      },
      Object {
        "category": Array [
          "bar",
        ],
        "id": "id-bar1",
        "text": "text-bar1",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo2",
        "text": "text-foo2",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo3",
        "text": "text-foo3",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo4",
        "text": "text-foo4",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo5",
        "text": "text-foo5",
      },
    ]
  }
  categories={
    Array [
      Object {
        "hexColour": "#all",
        "title": "all",
      },
      Object {
        "hexColour": "#foo",
        "title": "foo",
      },
      Object {
        "hexColour": "#bar",
        "title": "bar",
      },
    ]
  }
  filterType="checkbox"
  pageSize={1}
  showAllCategoryTitle="all"
  showMoreButtonText="Show more"
>
  <FilterContainer
    categories={
      Array [
        Object {
          "hexColour": "#all",
          "title": "all",
        },
        Object {
          "hexColour": "#foo",
          "title": "foo",
        },
        Object {
          "hexColour": "#bar",
          "title": "bar",
        },
      ]
    }
    filterType="checkbox"
    handleFilterSelect={[Function]}
    selected={
      Array [
        "foo",
      ]
    }
  >
    <Gridstyles__Container
      mx="auto"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "mx": "auto",
            },
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Gridstyles__Container-jfdl1j-2",
              "isStatic": false,
              "lastClassName": "byHCwx",
              "rules": Array [
                "@media screen and (min-width: 375px)",
                "{min-width:335px;}",
                "@media screen and (min-width: 768px)",
                "{min-width:668px;}",
                "@media screen and (min-width: 1024px)",
                "{min-width:960px;}",
                "@media screen and (min-width: 1440px)",
                "{min-width:1260px;max-width:",
                "1440",
                "px;}",
                [Function],
                " ",
                [Function],
                " ",
                [Function],
              ],
            },
            "displayName": "Gridstyles__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Gridstyles__Container-jfdl1j-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        mx="auto"
      >
        <div
          className="Gridstyles__Container-jfdl1j-2 byHCwx"
        >
          <Gridstyles__Row
            display="flex"
            flexWrap="wrap"
          >
            <StyledComponent
              display="flex"
              flexWrap="wrap"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "display": "flex",
                    "flexWrap": "wrap",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Row-jfdl1j-1",
                    "isStatic": false,
                    "lastClassName": "eCAEmt",
                    "rules": Array [
                      "margin-left:5px;margin-right:5px;",
                      "@media screen and (min-width: 375px)",
                      "{margin-left:10px;margin-right:10px;}",
                      "@media screen and (min-width: 768px)",
                      "{margin-left:40px;margin-right:40px;}",
                      "@media screen and (min-width: 1024px)",
                      "{margin-left:75px;margin-right:75px;}&&{",
                      [Function],
                      "}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Row",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                display="flex"
              >
                <Gridstyles__Column
                  py={
                    Array [
                      20,
                      20,
                      40,
                    ]
                  }
                  width={1}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Column-jfdl1j-0",
                          "isStatic": false,
                          "lastClassName": "kdyIPc",
                          "rules": Array [
                            "padding:10px 5px;",
                            "@media screen and (min-width: 375px)",
                            "{padding:10px;}",
                            "@media screen and (min-width: 1024px)",
                            "{padding:10px 15px;}&&{",
                            [Function],
                            "}",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Column",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Column-jfdl1j-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    py={
                      Array [
                        20,
                        20,
                        40,
                      ]
                    }
                    width={1}
                  >
                    <div
                      className="Gridstyles__Column-jfdl1j-0 jnwtYj"
                      width={1}
                    >
                      <styles__FilterContainerWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styles__FilterContainerWrapper-kd1mao-0",
                                "isStatic": false,
                                "lastClassName": "kWUFNq",
                                "rules": Array [
                                  "display:flex;flex-wrap:wrap;justify-content:center;",
                                ],
                              },
                              "displayName": "styles__FilterContainerWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styles__FilterContainerWrapper-kd1mao-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="styles__FilterContainerWrapper-kd1mao-0 kWUFNq"
                          >
                            <FilterLabel
                              filterColour="#all"
                              filterName="all"
                              filterType="checkbox"
                              handleSelect={[Function]}
                              id="all"
                              isSelected={false}
                              key="all"
                            >
                              <styles__Label
                                backgroundColor="#all"
                                htmlFor="all"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#all"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="all"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 cGlsrw"
                                    htmlFor="all"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          all
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="all"
                                      id="all"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="checkbox"
                                      value="all"
                                    >
                                      <StyledComponent
                                        aria-label="all"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="all"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="checkbox"
                                        value="all"
                                      >
                                        <input
                                          aria-label="all"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="all"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value="all"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#foo"
                              filterName="foo"
                              filterType="checkbox"
                              handleSelect={[Function]}
                              id="foo"
                              isSelected={true}
                              key="foo"
                            >
                              <styles__Label
                                backgroundColor="#foo"
                                htmlFor="foo"
                                isSelected={true}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#foo"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="foo"
                                  isSelected={true}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gdJNpr"
                                    htmlFor="foo"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          foo
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="foo"
                                      id="foo"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="checkbox"
                                      value="foo"
                                    >
                                      <StyledComponent
                                        aria-label="foo"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="foo"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="checkbox"
                                        value="foo"
                                      >
                                        <input
                                          aria-label="foo"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="foo"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value="foo"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#bar"
                              filterName="bar"
                              filterType="checkbox"
                              handleSelect={[Function]}
                              id="bar"
                              isSelected={false}
                              key="bar"
                            >
                              <styles__Label
                                backgroundColor="#bar"
                                htmlFor="bar"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#bar"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="bar"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gBUgEB"
                                    htmlFor="bar"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          bar
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="bar"
                                      id="bar"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="checkbox"
                                      value="bar"
                                    >
                                      <StyledComponent
                                        aria-label="bar"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="bar"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="checkbox"
                                        value="bar"
                                      >
                                        <input
                                          aria-label="bar"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="bar"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value="bar"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                          </div>
                        </StyledComponent>
                      </styles__FilterContainerWrapper>
                    </div>
                  </StyledComponent>
                </Gridstyles__Column>
              </div>
            </StyledComponent>
          </Gridstyles__Row>
        </div>
      </StyledComponent>
    </Gridstyles__Container>
  </FilterContainer>
  <PagedCardContainer
    CardComponent={[Function]}
    cardContent={
      Array [
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo0",
          "text": "text-foo0",
        },
      ]
    }
    moreCardsToShow={true}
    onShowMoreButtonClick={[Function]}
    pageSize={1}
    showMoreButtonText="Show more"
  >
    <pagedCardContainer__PaddedCardContainer
      CardComponent={[Function]}
      cardContent={
        Array [
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo0",
            "text": "text-foo0",
          },
        ]
      }
      isFullyLoaded={false}
    >
      <StyledComponent
        CardComponent={[Function]}
        cardContent={
          Array [
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo0",
              "text": "text-foo0",
            },
          ]
        }
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
              "isStatic": false,
              "lastClassName": "jSDtMq",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "pagedCardContainer__PaddedCardContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isFullyLoaded={false}
      >
        <CardContainer
          CardComponent={[Function]}
          cardContent={
            Array [
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo0",
                "text": "text-foo0",
              },
            ]
          }
          className="pagedCardContainer__PaddedCardContainer-ymz70m-0 jSDtMq"
          isFullyLoaded={false}
        >
          <Gridstyles__Container
            className="pagedCardContainer__PaddedCardContainer-ymz70m-0 jSDtMq"
            mx="auto"
          >
            <StyledComponent
              className="pagedCardContainer__PaddedCardContainer-ymz70m-0 jSDtMq"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "mx": "auto",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Container-jfdl1j-2",
                    "isStatic": false,
                    "lastClassName": "byHCwx",
                    "rules": Array [
                      "@media screen and (min-width: 375px)",
                      "{min-width:335px;}",
                      "@media screen and (min-width: 768px)",
                      "{min-width:668px;}",
                      "@media screen and (min-width: 1024px)",
                      "{min-width:960px;}",
                      "@media screen and (min-width: 1440px)",
                      "{min-width:1260px;max-width:",
                      "1440",
                      "px;}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Container",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Container-jfdl1j-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              mx="auto"
            >
              <div
                className="Gridstyles__Container-jfdl1j-2 byHCwx pagedCardContainer__PaddedCardContainer-ymz70m-0 jSDtMq"
              >
                <Gridstyles__Row
                  display="flex"
                  flexWrap="wrap"
                >
                  <StyledComponent
                    display="flex"
                    flexWrap="wrap"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "_foldedDefaultProps": Object {
                          "display": "flex",
                          "flexWrap": "wrap",
                        },
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Row-jfdl1j-1",
                          "isStatic": false,
                          "lastClassName": "eCAEmt",
                          "rules": Array [
                            "margin-left:5px;margin-right:5px;",
                            "@media screen and (min-width: 375px)",
                            "{margin-left:10px;margin-right:10px;}",
                            "@media screen and (min-width: 768px)",
                            "{margin-left:40px;margin-right:40px;}",
                            "@media screen and (min-width: 1024px)",
                            "{margin-left:75px;margin-right:75px;}&&{",
                            [Function],
                            "}",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Row",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                      display="flex"
                    >
                      <Gridstyles__FlexColumn
                        key="id-foo0"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo0"
                            >
                              <div>
                                text-foo0
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                    </div>
                  </StyledComponent>
                </Gridstyles__Row>
              </div>
            </StyledComponent>
          </Gridstyles__Container>
        </CardContainer>
      </StyledComponent>
    </pagedCardContainer__PaddedCardContainer>
    <ShowMoreButton
      onClick={[Function]}
      text="Show more"
    >
      <Gridstyles__Row
        display="flex"
        flexWrap="wrap"
        pb={
          Array [
            30,
            30,
            50,
          ]
        }
      >
        <StyledComponent
          display="flex"
          flexWrap="wrap"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "display": "flex",
                "flexWrap": "wrap",
              },
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Gridstyles__Row-jfdl1j-1",
                "isStatic": false,
                "lastClassName": "eCAEmt",
                "rules": Array [
                  "margin-left:5px;margin-right:5px;",
                  "@media screen and (min-width: 375px)",
                  "{margin-left:10px;margin-right:10px;}",
                  "@media screen and (min-width: 768px)",
                  "{margin-left:40px;margin-right:40px;}",
                  "@media screen and (min-width: 1024px)",
                  "{margin-left:75px;margin-right:75px;}&&{",
                  [Function],
                  "}",
                  [Function],
                  " ",
                  [Function],
                  " ",
                  [Function],
                ],
              },
              "displayName": "Gridstyles__Row",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Gridstyles__Row-jfdl1j-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          pb={
            Array [
              30,
              30,
              50,
            ]
          }
        >
          <div
            className="Gridstyles__Row-jfdl1j-1 eCAEmt"
            display="flex"
          >
            <Gridstyles__Column
              mx="auto"
              pt={
                Array [
                  30,
                  30,
                  50,
                ]
              }
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Gridstyles__Column-jfdl1j-0",
                      "isStatic": false,
                      "lastClassName": "kdyIPc",
                      "rules": Array [
                        "padding:10px 5px;",
                        "@media screen and (min-width: 375px)",
                        "{padding:10px;}",
                        "@media screen and (min-width: 1024px)",
                        "{padding:10px 15px;}&&{",
                        [Function],
                        "}",
                        [Function],
                      ],
                    },
                    "displayName": "Gridstyles__Column",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Gridstyles__Column-jfdl1j-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                mx="auto"
                pt={
                  Array [
                    30,
                    30,
                    50,
                  ]
                }
              >
                <div
                  className="Gridstyles__Column-jfdl1j-0 kdyIPc"
                >
                  <Button
                    onClick={[Function]}
                    variant="primary"
                  >
                    <Buttonstyles__StyledButton
                      onClick={[Function]}
                      renderAs="button"
                      variant="primary"
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Buttonstyles__StyledButton-sc-8soki7-0",
                              "isStatic": false,
                              "lastClassName": "hWJnOq",
                              "rules": Array [
                                "padding:12px 35px;border-radius:4px;font-family:",
                                "Poppins, sans-serif",
                                ";font-size:1.125rem;font-weight:700;line-height:1.388;display:inline-block;text-align:center;cursor:pointer;text-decoration:none;transition:background-color 0.15s linear,border 0.15s linear;",
                                [Function],
                                " &:disabled{opacity:0.5;cursor:not-allowed;}",
                                [Function],
                              ],
                            },
                            "displayName": "Buttonstyles__StyledButton",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Buttonstyles__StyledButton-sc-8soki7-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                        renderAs="button"
                        variant="primary"
                      >
                        <Component
                          className="Buttonstyles__StyledButton-sc-8soki7-0 hWJnOq"
                          onClick={[Function]}
                          renderAs="button"
                          variant="primary"
                        >
                          <button
                            className="Buttonstyles__StyledButton-sc-8soki7-0 hWJnOq"
                            onClick={[Function]}
                            variant="primary"
                          >
                            Show more
                          </button>
                        </Component>
                      </StyledComponent>
                    </Buttonstyles__StyledButton>
                  </Button>
                </div>
              </StyledComponent>
            </Gridstyles__Column>
          </div>
        </StyledComponent>
      </Gridstyles__Row>
    </ShowMoreButton>
  </PagedCardContainer>
</FilteredPagedCardContainer>
`;

exports[`FilteredPagedCardContainer with checkbox shows only cards with the selected filter category 1`] = `
<FilteredPagedCardContainer
  CardComponent={[Function]}
  cardContent={
    Array [
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo0",
        "text": "text-foo0",
      },
      Object {
        "category": Array [
          "bar",
        ],
        "id": "id-bar1",
        "text": "text-bar1",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo2",
        "text": "text-foo2",
      },
    ]
  }
  categories={
    Array [
      Object {
        "hexColour": "#all",
        "title": "all",
      },
      Object {
        "hexColour": "#foo",
        "title": "foo",
      },
      Object {
        "hexColour": "#bar",
        "title": "bar",
      },
    ]
  }
  filterType="checkbox"
  pageSize={6}
  showAllCategoryTitle="all"
  showMoreButtonText="Show more"
>
  <FilterContainer
    categories={
      Array [
        Object {
          "hexColour": "#all",
          "title": "all",
        },
        Object {
          "hexColour": "#foo",
          "title": "foo",
        },
        Object {
          "hexColour": "#bar",
          "title": "bar",
        },
      ]
    }
    filterType="checkbox"
    handleFilterSelect={[Function]}
    selected={
      Array [
        "foo",
      ]
    }
  >
    <Gridstyles__Container
      mx="auto"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "mx": "auto",
            },
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Gridstyles__Container-jfdl1j-2",
              "isStatic": false,
              "lastClassName": "byHCwx",
              "rules": Array [
                "@media screen and (min-width: 375px)",
                "{min-width:335px;}",
                "@media screen and (min-width: 768px)",
                "{min-width:668px;}",
                "@media screen and (min-width: 1024px)",
                "{min-width:960px;}",
                "@media screen and (min-width: 1440px)",
                "{min-width:1260px;max-width:",
                "1440",
                "px;}",
                [Function],
                " ",
                [Function],
                " ",
                [Function],
              ],
            },
            "displayName": "Gridstyles__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Gridstyles__Container-jfdl1j-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        mx="auto"
      >
        <div
          className="Gridstyles__Container-jfdl1j-2 byHCwx"
        >
          <Gridstyles__Row
            display="flex"
            flexWrap="wrap"
          >
            <StyledComponent
              display="flex"
              flexWrap="wrap"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "display": "flex",
                    "flexWrap": "wrap",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Row-jfdl1j-1",
                    "isStatic": false,
                    "lastClassName": "ihaaWG",
                    "rules": Array [
                      "margin-left:5px;margin-right:5px;",
                      "@media screen and (min-width: 375px)",
                      "{margin-left:10px;margin-right:10px;}",
                      "@media screen and (min-width: 768px)",
                      "{margin-left:40px;margin-right:40px;}",
                      "@media screen and (min-width: 1024px)",
                      "{margin-left:75px;margin-right:75px;}&&{",
                      [Function],
                      "}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Row",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                display="flex"
              >
                <Gridstyles__Column
                  py={
                    Array [
                      20,
                      20,
                      40,
                    ]
                  }
                  width={1}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Column-jfdl1j-0",
                          "isStatic": false,
                          "lastClassName": "jnwtYj",
                          "rules": Array [
                            "padding:10px 5px;",
                            "@media screen and (min-width: 375px)",
                            "{padding:10px;}",
                            "@media screen and (min-width: 1024px)",
                            "{padding:10px 15px;}&&{",
                            [Function],
                            "}",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Column",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Column-jfdl1j-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    py={
                      Array [
                        20,
                        20,
                        40,
                      ]
                    }
                    width={1}
                  >
                    <div
                      className="Gridstyles__Column-jfdl1j-0 jnwtYj"
                      width={1}
                    >
                      <styles__FilterContainerWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styles__FilterContainerWrapper-kd1mao-0",
                                "isStatic": false,
                                "lastClassName": "kWUFNq",
                                "rules": Array [
                                  "display:flex;flex-wrap:wrap;justify-content:center;",
                                ],
                              },
                              "displayName": "styles__FilterContainerWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styles__FilterContainerWrapper-kd1mao-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="styles__FilterContainerWrapper-kd1mao-0 kWUFNq"
                          >
                            <FilterLabel
                              filterColour="#all"
                              filterName="all"
                              filterType="checkbox"
                              handleSelect={[Function]}
                              id="all"
                              isSelected={false}
                              key="all"
                            >
                              <styles__Label
                                backgroundColor="#all"
                                htmlFor="all"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#all"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="all"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 cGlsrw"
                                    htmlFor="all"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          all
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="all"
                                      id="all"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="checkbox"
                                      value="all"
                                    >
                                      <StyledComponent
                                        aria-label="all"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="all"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="checkbox"
                                        value="all"
                                      >
                                        <input
                                          aria-label="all"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="all"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value="all"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#foo"
                              filterName="foo"
                              filterType="checkbox"
                              handleSelect={[Function]}
                              id="foo"
                              isSelected={true}
                              key="foo"
                            >
                              <styles__Label
                                backgroundColor="#foo"
                                htmlFor="foo"
                                isSelected={true}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#foo"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="foo"
                                  isSelected={true}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gdJNpr"
                                    htmlFor="foo"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          foo
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="foo"
                                      id="foo"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="checkbox"
                                      value="foo"
                                    >
                                      <StyledComponent
                                        aria-label="foo"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="foo"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="checkbox"
                                        value="foo"
                                      >
                                        <input
                                          aria-label="foo"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="foo"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value="foo"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#bar"
                              filterName="bar"
                              filterType="checkbox"
                              handleSelect={[Function]}
                              id="bar"
                              isSelected={false}
                              key="bar"
                            >
                              <styles__Label
                                backgroundColor="#bar"
                                htmlFor="bar"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#bar"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="bar"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gBUgEB"
                                    htmlFor="bar"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          bar
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="bar"
                                      id="bar"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="checkbox"
                                      value="bar"
                                    >
                                      <StyledComponent
                                        aria-label="bar"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="bar"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="checkbox"
                                        value="bar"
                                      >
                                        <input
                                          aria-label="bar"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="bar"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="checkbox"
                                          value="bar"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                          </div>
                        </StyledComponent>
                      </styles__FilterContainerWrapper>
                    </div>
                  </StyledComponent>
                </Gridstyles__Column>
              </div>
            </StyledComponent>
          </Gridstyles__Row>
        </div>
      </StyledComponent>
    </Gridstyles__Container>
  </FilterContainer>
  <PagedCardContainer
    CardComponent={[Function]}
    cardContent={
      Array [
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo0",
          "text": "text-foo0",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo2",
          "text": "text-foo2",
        },
      ]
    }
    moreCardsToShow={false}
    onShowMoreButtonClick={[Function]}
    pageSize={6}
    showMoreButtonText="Show more"
  >
    <pagedCardContainer__PaddedCardContainer
      CardComponent={[Function]}
      cardContent={
        Array [
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo0",
            "text": "text-foo0",
          },
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo2",
            "text": "text-foo2",
          },
        ]
      }
      isFullyLoaded={true}
    >
      <StyledComponent
        CardComponent={[Function]}
        cardContent={
          Array [
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo0",
              "text": "text-foo0",
            },
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo2",
              "text": "text-foo2",
            },
          ]
        }
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
              "isStatic": false,
              "lastClassName": "iMbSNm",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "pagedCardContainer__PaddedCardContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isFullyLoaded={true}
      >
        <CardContainer
          CardComponent={[Function]}
          cardContent={
            Array [
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo0",
                "text": "text-foo0",
              },
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo2",
                "text": "text-foo2",
              },
            ]
          }
          className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
          isFullyLoaded={true}
        >
          <Gridstyles__Container
            className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
            mx="auto"
          >
            <StyledComponent
              className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "mx": "auto",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Container-jfdl1j-2",
                    "isStatic": false,
                    "lastClassName": "byHCwx",
                    "rules": Array [
                      "@media screen and (min-width: 375px)",
                      "{min-width:335px;}",
                      "@media screen and (min-width: 768px)",
                      "{min-width:668px;}",
                      "@media screen and (min-width: 1024px)",
                      "{min-width:960px;}",
                      "@media screen and (min-width: 1440px)",
                      "{min-width:1260px;max-width:",
                      "1440",
                      "px;}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Container",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Container-jfdl1j-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              mx="auto"
            >
              <div
                className="Gridstyles__Container-jfdl1j-2 byHCwx pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
              >
                <Gridstyles__Row
                  display="flex"
                  flexWrap="wrap"
                >
                  <StyledComponent
                    display="flex"
                    flexWrap="wrap"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "_foldedDefaultProps": Object {
                          "display": "flex",
                          "flexWrap": "wrap",
                        },
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Row-jfdl1j-1",
                          "isStatic": false,
                          "lastClassName": "ihaaWG",
                          "rules": Array [
                            "margin-left:5px;margin-right:5px;",
                            "@media screen and (min-width: 375px)",
                            "{margin-left:10px;margin-right:10px;}",
                            "@media screen and (min-width: 768px)",
                            "{margin-left:40px;margin-right:40px;}",
                            "@media screen and (min-width: 1024px)",
                            "{margin-left:75px;margin-right:75px;}&&{",
                            [Function],
                            "}",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Row",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                      display="flex"
                    >
                      <Gridstyles__FlexColumn
                        key="id-foo0"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo0"
                            >
                              <div>
                                text-foo0
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                      <Gridstyles__FlexColumn
                        key="id-foo2"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo2"
                            >
                              <div>
                                text-foo2
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                    </div>
                  </StyledComponent>
                </Gridstyles__Row>
              </div>
            </StyledComponent>
          </Gridstyles__Container>
        </CardContainer>
      </StyledComponent>
    </pagedCardContainer__PaddedCardContainer>
  </PagedCardContainer>
</FilteredPagedCardContainer>
`;

exports[`FilteredPagedCardContainer with radio filter type shows more cards when the "show more" button is clicked 1`] = `
<FilteredPagedCardContainer
  CardComponent={[Function]}
  cardContent={
    Array [
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo0",
        "text": "text-foo0",
      },
      Object {
        "category": Array [
          "bar",
        ],
        "id": "id-bar1",
        "text": "text-bar1",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo2",
        "text": "text-foo2",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo3",
        "text": "text-foo3",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo4",
        "text": "text-foo4",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo5",
        "text": "text-foo5",
      },
    ]
  }
  categories={
    Array [
      Object {
        "hexColour": "#all",
        "title": "all",
      },
      Object {
        "hexColour": "#foo",
        "title": "foo",
      },
      Object {
        "hexColour": "#bar",
        "title": "bar",
      },
    ]
  }
  filterType="radio"
  pageSize={3}
  showAllCategoryTitle="all"
  showMoreButtonText="Show more"
>
  <FilterContainer
    categories={
      Array [
        Object {
          "hexColour": "#all",
          "title": "all",
        },
        Object {
          "hexColour": "#foo",
          "title": "foo",
        },
        Object {
          "hexColour": "#bar",
          "title": "bar",
        },
      ]
    }
    filterType="radio"
    handleFilterSelect={[Function]}
    selected="foo"
  >
    <Gridstyles__Container
      mx="auto"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "mx": "auto",
            },
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Gridstyles__Container-jfdl1j-2",
              "isStatic": false,
              "lastClassName": "byHCwx",
              "rules": Array [
                "@media screen and (min-width: 375px)",
                "{min-width:335px;}",
                "@media screen and (min-width: 768px)",
                "{min-width:668px;}",
                "@media screen and (min-width: 1024px)",
                "{min-width:960px;}",
                "@media screen and (min-width: 1440px)",
                "{min-width:1260px;max-width:",
                "1440",
                "px;}",
                [Function],
                " ",
                [Function],
                " ",
                [Function],
              ],
            },
            "displayName": "Gridstyles__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Gridstyles__Container-jfdl1j-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        mx="auto"
      >
        <div
          className="Gridstyles__Container-jfdl1j-2 byHCwx"
        >
          <Gridstyles__Row
            display="flex"
            flexWrap="wrap"
          >
            <StyledComponent
              display="flex"
              flexWrap="wrap"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "display": "flex",
                    "flexWrap": "wrap",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Row-jfdl1j-1",
                    "isStatic": false,
                    "lastClassName": "ihaaWG",
                    "rules": Array [
                      "margin-left:5px;margin-right:5px;",
                      "@media screen and (min-width: 375px)",
                      "{margin-left:10px;margin-right:10px;}",
                      "@media screen and (min-width: 768px)",
                      "{margin-left:40px;margin-right:40px;}",
                      "@media screen and (min-width: 1024px)",
                      "{margin-left:75px;margin-right:75px;}&&{",
                      [Function],
                      "}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Row",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                display="flex"
              >
                <Gridstyles__Column
                  py={
                    Array [
                      20,
                      20,
                      40,
                    ]
                  }
                  width={1}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Column-jfdl1j-0",
                          "isStatic": false,
                          "lastClassName": "jnwtYj",
                          "rules": Array [
                            "padding:10px 5px;",
                            "@media screen and (min-width: 375px)",
                            "{padding:10px;}",
                            "@media screen and (min-width: 1024px)",
                            "{padding:10px 15px;}&&{",
                            [Function],
                            "}",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Column",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Column-jfdl1j-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    py={
                      Array [
                        20,
                        20,
                        40,
                      ]
                    }
                    width={1}
                  >
                    <div
                      className="Gridstyles__Column-jfdl1j-0 jnwtYj"
                      width={1}
                    >
                      <styles__FilterContainerWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styles__FilterContainerWrapper-kd1mao-0",
                                "isStatic": false,
                                "lastClassName": "kWUFNq",
                                "rules": Array [
                                  "display:flex;flex-wrap:wrap;justify-content:center;",
                                ],
                              },
                              "displayName": "styles__FilterContainerWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styles__FilterContainerWrapper-kd1mao-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="styles__FilterContainerWrapper-kd1mao-0 kWUFNq"
                          >
                            <FilterLabel
                              filterColour="#all"
                              filterName="all"
                              filterType="radio"
                              handleSelect={[Function]}
                              id="all"
                              isSelected={false}
                              key="all"
                            >
                              <styles__Label
                                backgroundColor="#all"
                                htmlFor="all"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#all"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="all"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 cGlsrw"
                                    htmlFor="all"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          all
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="all"
                                      id="all"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="radio"
                                      value="all"
                                    >
                                      <StyledComponent
                                        aria-label="all"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="all"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="radio"
                                        value="all"
                                      >
                                        <input
                                          aria-label="all"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="all"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="radio"
                                          value="all"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#foo"
                              filterName="foo"
                              filterType="radio"
                              handleSelect={[Function]}
                              id="foo"
                              isSelected={true}
                              key="foo"
                            >
                              <styles__Label
                                backgroundColor="#foo"
                                htmlFor="foo"
                                isSelected={true}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#foo"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="foo"
                                  isSelected={true}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gdJNpr"
                                    htmlFor="foo"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          foo
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="foo"
                                      id="foo"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="radio"
                                      value="foo"
                                    >
                                      <StyledComponent
                                        aria-label="foo"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="foo"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="radio"
                                        value="foo"
                                      >
                                        <input
                                          aria-label="foo"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="foo"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="radio"
                                          value="foo"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#bar"
                              filterName="bar"
                              filterType="radio"
                              handleSelect={[Function]}
                              id="bar"
                              isSelected={false}
                              key="bar"
                            >
                              <styles__Label
                                backgroundColor="#bar"
                                htmlFor="bar"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#bar"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="bar"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gBUgEB"
                                    htmlFor="bar"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          bar
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="bar"
                                      id="bar"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="radio"
                                      value="bar"
                                    >
                                      <StyledComponent
                                        aria-label="bar"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="bar"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="radio"
                                        value="bar"
                                      >
                                        <input
                                          aria-label="bar"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="bar"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="radio"
                                          value="bar"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                          </div>
                        </StyledComponent>
                      </styles__FilterContainerWrapper>
                    </div>
                  </StyledComponent>
                </Gridstyles__Column>
              </div>
            </StyledComponent>
          </Gridstyles__Row>
        </div>
      </StyledComponent>
    </Gridstyles__Container>
  </FilterContainer>
  <PagedCardContainer
    CardComponent={[Function]}
    cardContent={
      Array [
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo0",
          "text": "text-foo0",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo2",
          "text": "text-foo2",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo3",
          "text": "text-foo3",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo4",
          "text": "text-foo4",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo5",
          "text": "text-foo5",
        },
      ]
    }
    moreCardsToShow={false}
    onShowMoreButtonClick={[Function]}
    pageSize={3}
    showMoreButtonText="Show more"
  >
    <pagedCardContainer__PaddedCardContainer
      CardComponent={[Function]}
      cardContent={
        Array [
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo0",
            "text": "text-foo0",
          },
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo2",
            "text": "text-foo2",
          },
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo3",
            "text": "text-foo3",
          },
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo4",
            "text": "text-foo4",
          },
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo5",
            "text": "text-foo5",
          },
        ]
      }
      isFullyLoaded={true}
    >
      <StyledComponent
        CardComponent={[Function]}
        cardContent={
          Array [
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo0",
              "text": "text-foo0",
            },
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo2",
              "text": "text-foo2",
            },
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo3",
              "text": "text-foo3",
            },
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo4",
              "text": "text-foo4",
            },
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo5",
              "text": "text-foo5",
            },
          ]
        }
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
              "isStatic": false,
              "lastClassName": "iMbSNm",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "pagedCardContainer__PaddedCardContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isFullyLoaded={true}
      >
        <CardContainer
          CardComponent={[Function]}
          cardContent={
            Array [
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo0",
                "text": "text-foo0",
              },
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo2",
                "text": "text-foo2",
              },
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo3",
                "text": "text-foo3",
              },
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo4",
                "text": "text-foo4",
              },
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo5",
                "text": "text-foo5",
              },
            ]
          }
          className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
          isFullyLoaded={true}
        >
          <Gridstyles__Container
            className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
            mx="auto"
          >
            <StyledComponent
              className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "mx": "auto",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Container-jfdl1j-2",
                    "isStatic": false,
                    "lastClassName": "byHCwx",
                    "rules": Array [
                      "@media screen and (min-width: 375px)",
                      "{min-width:335px;}",
                      "@media screen and (min-width: 768px)",
                      "{min-width:668px;}",
                      "@media screen and (min-width: 1024px)",
                      "{min-width:960px;}",
                      "@media screen and (min-width: 1440px)",
                      "{min-width:1260px;max-width:",
                      "1440",
                      "px;}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Container",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Container-jfdl1j-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              mx="auto"
            >
              <div
                className="Gridstyles__Container-jfdl1j-2 byHCwx pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
              >
                <Gridstyles__Row
                  display="flex"
                  flexWrap="wrap"
                >
                  <StyledComponent
                    display="flex"
                    flexWrap="wrap"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "_foldedDefaultProps": Object {
                          "display": "flex",
                          "flexWrap": "wrap",
                        },
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Row-jfdl1j-1",
                          "isStatic": false,
                          "lastClassName": "ihaaWG",
                          "rules": Array [
                            "margin-left:5px;margin-right:5px;",
                            "@media screen and (min-width: 375px)",
                            "{margin-left:10px;margin-right:10px;}",
                            "@media screen and (min-width: 768px)",
                            "{margin-left:40px;margin-right:40px;}",
                            "@media screen and (min-width: 1024px)",
                            "{margin-left:75px;margin-right:75px;}&&{",
                            [Function],
                            "}",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Row",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                      display="flex"
                    >
                      <Gridstyles__FlexColumn
                        key="id-foo0"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo0"
                            >
                              <div>
                                text-foo0
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                      <Gridstyles__FlexColumn
                        key="id-foo2"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo2"
                            >
                              <div>
                                text-foo2
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                      <Gridstyles__FlexColumn
                        key="id-foo3"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo3"
                            >
                              <div>
                                text-foo3
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                      <Gridstyles__FlexColumn
                        key="id-foo4"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo4"
                            >
                              <div>
                                text-foo4
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                      <Gridstyles__FlexColumn
                        key="id-foo5"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo5"
                            >
                              <div>
                                text-foo5
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                    </div>
                  </StyledComponent>
                </Gridstyles__Row>
              </div>
            </StyledComponent>
          </Gridstyles__Container>
        </CardContainer>
      </StyledComponent>
    </pagedCardContainer__PaddedCardContainer>
  </PagedCardContainer>
</FilteredPagedCardContainer>
`;

exports[`FilteredPagedCardContainer with radio filter type snaps back to one page displayed on filter change 1`] = `
<FilteredPagedCardContainer
  CardComponent={[Function]}
  cardContent={
    Array [
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo0",
        "text": "text-foo0",
      },
      Object {
        "category": Array [
          "bar",
        ],
        "id": "id-bar1",
        "text": "text-bar1",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo2",
        "text": "text-foo2",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo3",
        "text": "text-foo3",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo4",
        "text": "text-foo4",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo5",
        "text": "text-foo5",
      },
    ]
  }
  categories={
    Array [
      Object {
        "hexColour": "#all",
        "title": "all",
      },
      Object {
        "hexColour": "#foo",
        "title": "foo",
      },
      Object {
        "hexColour": "#bar",
        "title": "bar",
      },
    ]
  }
  filterType="radio"
  pageSize={1}
  showAllCategoryTitle="all"
  showMoreButtonText="Show more"
>
  <FilterContainer
    categories={
      Array [
        Object {
          "hexColour": "#all",
          "title": "all",
        },
        Object {
          "hexColour": "#foo",
          "title": "foo",
        },
        Object {
          "hexColour": "#bar",
          "title": "bar",
        },
      ]
    }
    filterType="radio"
    handleFilterSelect={[Function]}
    selected="foo"
  >
    <Gridstyles__Container
      mx="auto"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "mx": "auto",
            },
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Gridstyles__Container-jfdl1j-2",
              "isStatic": false,
              "lastClassName": "byHCwx",
              "rules": Array [
                "@media screen and (min-width: 375px)",
                "{min-width:335px;}",
                "@media screen and (min-width: 768px)",
                "{min-width:668px;}",
                "@media screen and (min-width: 1024px)",
                "{min-width:960px;}",
                "@media screen and (min-width: 1440px)",
                "{min-width:1260px;max-width:",
                "1440",
                "px;}",
                [Function],
                " ",
                [Function],
                " ",
                [Function],
              ],
            },
            "displayName": "Gridstyles__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Gridstyles__Container-jfdl1j-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        mx="auto"
      >
        <div
          className="Gridstyles__Container-jfdl1j-2 byHCwx"
        >
          <Gridstyles__Row
            display="flex"
            flexWrap="wrap"
          >
            <StyledComponent
              display="flex"
              flexWrap="wrap"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "display": "flex",
                    "flexWrap": "wrap",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Row-jfdl1j-1",
                    "isStatic": false,
                    "lastClassName": "eCAEmt",
                    "rules": Array [
                      "margin-left:5px;margin-right:5px;",
                      "@media screen and (min-width: 375px)",
                      "{margin-left:10px;margin-right:10px;}",
                      "@media screen and (min-width: 768px)",
                      "{margin-left:40px;margin-right:40px;}",
                      "@media screen and (min-width: 1024px)",
                      "{margin-left:75px;margin-right:75px;}&&{",
                      [Function],
                      "}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Row",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                display="flex"
              >
                <Gridstyles__Column
                  py={
                    Array [
                      20,
                      20,
                      40,
                    ]
                  }
                  width={1}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Column-jfdl1j-0",
                          "isStatic": false,
                          "lastClassName": "kdyIPc",
                          "rules": Array [
                            "padding:10px 5px;",
                            "@media screen and (min-width: 375px)",
                            "{padding:10px;}",
                            "@media screen and (min-width: 1024px)",
                            "{padding:10px 15px;}&&{",
                            [Function],
                            "}",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Column",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Column-jfdl1j-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    py={
                      Array [
                        20,
                        20,
                        40,
                      ]
                    }
                    width={1}
                  >
                    <div
                      className="Gridstyles__Column-jfdl1j-0 jnwtYj"
                      width={1}
                    >
                      <styles__FilterContainerWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styles__FilterContainerWrapper-kd1mao-0",
                                "isStatic": false,
                                "lastClassName": "kWUFNq",
                                "rules": Array [
                                  "display:flex;flex-wrap:wrap;justify-content:center;",
                                ],
                              },
                              "displayName": "styles__FilterContainerWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styles__FilterContainerWrapper-kd1mao-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="styles__FilterContainerWrapper-kd1mao-0 kWUFNq"
                          >
                            <FilterLabel
                              filterColour="#all"
                              filterName="all"
                              filterType="radio"
                              handleSelect={[Function]}
                              id="all"
                              isSelected={false}
                              key="all"
                            >
                              <styles__Label
                                backgroundColor="#all"
                                htmlFor="all"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#all"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="all"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 cGlsrw"
                                    htmlFor="all"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          all
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="all"
                                      id="all"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="radio"
                                      value="all"
                                    >
                                      <StyledComponent
                                        aria-label="all"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="all"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="radio"
                                        value="all"
                                      >
                                        <input
                                          aria-label="all"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="all"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="radio"
                                          value="all"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#foo"
                              filterName="foo"
                              filterType="radio"
                              handleSelect={[Function]}
                              id="foo"
                              isSelected={true}
                              key="foo"
                            >
                              <styles__Label
                                backgroundColor="#foo"
                                htmlFor="foo"
                                isSelected={true}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#foo"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="foo"
                                  isSelected={true}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gdJNpr"
                                    htmlFor="foo"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          foo
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="foo"
                                      id="foo"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="radio"
                                      value="foo"
                                    >
                                      <StyledComponent
                                        aria-label="foo"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="foo"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="radio"
                                        value="foo"
                                      >
                                        <input
                                          aria-label="foo"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="foo"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="radio"
                                          value="foo"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#bar"
                              filterName="bar"
                              filterType="radio"
                              handleSelect={[Function]}
                              id="bar"
                              isSelected={false}
                              key="bar"
                            >
                              <styles__Label
                                backgroundColor="#bar"
                                htmlFor="bar"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#bar"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="bar"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gBUgEB"
                                    htmlFor="bar"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          bar
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="bar"
                                      id="bar"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="radio"
                                      value="bar"
                                    >
                                      <StyledComponent
                                        aria-label="bar"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="bar"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="radio"
                                        value="bar"
                                      >
                                        <input
                                          aria-label="bar"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="bar"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="radio"
                                          value="bar"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                          </div>
                        </StyledComponent>
                      </styles__FilterContainerWrapper>
                    </div>
                  </StyledComponent>
                </Gridstyles__Column>
              </div>
            </StyledComponent>
          </Gridstyles__Row>
        </div>
      </StyledComponent>
    </Gridstyles__Container>
  </FilterContainer>
  <PagedCardContainer
    CardComponent={[Function]}
    cardContent={
      Array [
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo0",
          "text": "text-foo0",
        },
      ]
    }
    moreCardsToShow={true}
    onShowMoreButtonClick={[Function]}
    pageSize={1}
    showMoreButtonText="Show more"
  >
    <pagedCardContainer__PaddedCardContainer
      CardComponent={[Function]}
      cardContent={
        Array [
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo0",
            "text": "text-foo0",
          },
        ]
      }
      isFullyLoaded={false}
    >
      <StyledComponent
        CardComponent={[Function]}
        cardContent={
          Array [
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo0",
              "text": "text-foo0",
            },
          ]
        }
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
              "isStatic": false,
              "lastClassName": "jSDtMq",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "pagedCardContainer__PaddedCardContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isFullyLoaded={false}
      >
        <CardContainer
          CardComponent={[Function]}
          cardContent={
            Array [
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo0",
                "text": "text-foo0",
              },
            ]
          }
          className="pagedCardContainer__PaddedCardContainer-ymz70m-0 jSDtMq"
          isFullyLoaded={false}
        >
          <Gridstyles__Container
            className="pagedCardContainer__PaddedCardContainer-ymz70m-0 jSDtMq"
            mx="auto"
          >
            <StyledComponent
              className="pagedCardContainer__PaddedCardContainer-ymz70m-0 jSDtMq"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "mx": "auto",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Container-jfdl1j-2",
                    "isStatic": false,
                    "lastClassName": "byHCwx",
                    "rules": Array [
                      "@media screen and (min-width: 375px)",
                      "{min-width:335px;}",
                      "@media screen and (min-width: 768px)",
                      "{min-width:668px;}",
                      "@media screen and (min-width: 1024px)",
                      "{min-width:960px;}",
                      "@media screen and (min-width: 1440px)",
                      "{min-width:1260px;max-width:",
                      "1440",
                      "px;}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Container",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Container-jfdl1j-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              mx="auto"
            >
              <div
                className="Gridstyles__Container-jfdl1j-2 byHCwx pagedCardContainer__PaddedCardContainer-ymz70m-0 jSDtMq"
              >
                <Gridstyles__Row
                  display="flex"
                  flexWrap="wrap"
                >
                  <StyledComponent
                    display="flex"
                    flexWrap="wrap"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "_foldedDefaultProps": Object {
                          "display": "flex",
                          "flexWrap": "wrap",
                        },
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Row-jfdl1j-1",
                          "isStatic": false,
                          "lastClassName": "eCAEmt",
                          "rules": Array [
                            "margin-left:5px;margin-right:5px;",
                            "@media screen and (min-width: 375px)",
                            "{margin-left:10px;margin-right:10px;}",
                            "@media screen and (min-width: 768px)",
                            "{margin-left:40px;margin-right:40px;}",
                            "@media screen and (min-width: 1024px)",
                            "{margin-left:75px;margin-right:75px;}&&{",
                            [Function],
                            "}",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Row",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                      display="flex"
                    >
                      <Gridstyles__FlexColumn
                        key="id-foo0"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo0"
                            >
                              <div>
                                text-foo0
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                    </div>
                  </StyledComponent>
                </Gridstyles__Row>
              </div>
            </StyledComponent>
          </Gridstyles__Container>
        </CardContainer>
      </StyledComponent>
    </pagedCardContainer__PaddedCardContainer>
    <ShowMoreButton
      onClick={[Function]}
      text="Show more"
    >
      <Gridstyles__Row
        display="flex"
        flexWrap="wrap"
        pb={
          Array [
            30,
            30,
            50,
          ]
        }
      >
        <StyledComponent
          display="flex"
          flexWrap="wrap"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "display": "flex",
                "flexWrap": "wrap",
              },
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Gridstyles__Row-jfdl1j-1",
                "isStatic": false,
                "lastClassName": "eCAEmt",
                "rules": Array [
                  "margin-left:5px;margin-right:5px;",
                  "@media screen and (min-width: 375px)",
                  "{margin-left:10px;margin-right:10px;}",
                  "@media screen and (min-width: 768px)",
                  "{margin-left:40px;margin-right:40px;}",
                  "@media screen and (min-width: 1024px)",
                  "{margin-left:75px;margin-right:75px;}&&{",
                  [Function],
                  "}",
                  [Function],
                  " ",
                  [Function],
                  " ",
                  [Function],
                ],
              },
              "displayName": "Gridstyles__Row",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Gridstyles__Row-jfdl1j-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          pb={
            Array [
              30,
              30,
              50,
            ]
          }
        >
          <div
            className="Gridstyles__Row-jfdl1j-1 eCAEmt"
            display="flex"
          >
            <Gridstyles__Column
              mx="auto"
              pt={
                Array [
                  30,
                  30,
                  50,
                ]
              }
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Gridstyles__Column-jfdl1j-0",
                      "isStatic": false,
                      "lastClassName": "kdyIPc",
                      "rules": Array [
                        "padding:10px 5px;",
                        "@media screen and (min-width: 375px)",
                        "{padding:10px;}",
                        "@media screen and (min-width: 1024px)",
                        "{padding:10px 15px;}&&{",
                        [Function],
                        "}",
                        [Function],
                      ],
                    },
                    "displayName": "Gridstyles__Column",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Gridstyles__Column-jfdl1j-0",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                mx="auto"
                pt={
                  Array [
                    30,
                    30,
                    50,
                  ]
                }
              >
                <div
                  className="Gridstyles__Column-jfdl1j-0 kdyIPc"
                >
                  <Button
                    onClick={[Function]}
                    variant="primary"
                  >
                    <Buttonstyles__StyledButton
                      onClick={[Function]}
                      renderAs="button"
                      variant="primary"
                    >
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Buttonstyles__StyledButton-sc-8soki7-0",
                              "isStatic": false,
                              "lastClassName": "hWJnOq",
                              "rules": Array [
                                "padding:12px 35px;border-radius:4px;font-family:",
                                "Poppins, sans-serif",
                                ";font-size:1.125rem;font-weight:700;line-height:1.388;display:inline-block;text-align:center;cursor:pointer;text-decoration:none;transition:background-color 0.15s linear,border 0.15s linear;",
                                [Function],
                                " &:disabled{opacity:0.5;cursor:not-allowed;}",
                                [Function],
                              ],
                            },
                            "displayName": "Buttonstyles__StyledButton",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Buttonstyles__StyledButton-sc-8soki7-0",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        onClick={[Function]}
                        renderAs="button"
                        variant="primary"
                      >
                        <Component
                          className="Buttonstyles__StyledButton-sc-8soki7-0 hWJnOq"
                          onClick={[Function]}
                          renderAs="button"
                          variant="primary"
                        >
                          <button
                            className="Buttonstyles__StyledButton-sc-8soki7-0 hWJnOq"
                            onClick={[Function]}
                            variant="primary"
                          >
                            Show more
                          </button>
                        </Component>
                      </StyledComponent>
                    </Buttonstyles__StyledButton>
                  </Button>
                </div>
              </StyledComponent>
            </Gridstyles__Column>
          </div>
        </StyledComponent>
      </Gridstyles__Row>
    </ShowMoreButton>
  </PagedCardContainer>
</FilteredPagedCardContainer>
`;

exports[`FilteredPagedCardContainer with radio shows only cards with the selected filter category 1`] = `
<FilteredPagedCardContainer
  CardComponent={[Function]}
  cardContent={
    Array [
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo0",
        "text": "text-foo0",
      },
      Object {
        "category": Array [
          "bar",
        ],
        "id": "id-bar1",
        "text": "text-bar1",
      },
      Object {
        "category": Array [
          "foo",
        ],
        "id": "id-foo2",
        "text": "text-foo2",
      },
    ]
  }
  categories={
    Array [
      Object {
        "hexColour": "#all",
        "title": "all",
      },
      Object {
        "hexColour": "#foo",
        "title": "foo",
      },
      Object {
        "hexColour": "#bar",
        "title": "bar",
      },
    ]
  }
  filterType="radio"
  pageSize={6}
  showAllCategoryTitle="all"
  showMoreButtonText="Show more"
>
  <FilterContainer
    categories={
      Array [
        Object {
          "hexColour": "#all",
          "title": "all",
        },
        Object {
          "hexColour": "#foo",
          "title": "foo",
        },
        Object {
          "hexColour": "#bar",
          "title": "bar",
        },
      ]
    }
    filterType="radio"
    handleFilterSelect={[Function]}
    selected="foo"
  >
    <Gridstyles__Container
      mx="auto"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "mx": "auto",
            },
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Gridstyles__Container-jfdl1j-2",
              "isStatic": false,
              "lastClassName": "byHCwx",
              "rules": Array [
                "@media screen and (min-width: 375px)",
                "{min-width:335px;}",
                "@media screen and (min-width: 768px)",
                "{min-width:668px;}",
                "@media screen and (min-width: 1024px)",
                "{min-width:960px;}",
                "@media screen and (min-width: 1440px)",
                "{min-width:1260px;max-width:",
                "1440",
                "px;}",
                [Function],
                " ",
                [Function],
                " ",
                [Function],
              ],
            },
            "displayName": "Gridstyles__Container",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Gridstyles__Container-jfdl1j-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        mx="auto"
      >
        <div
          className="Gridstyles__Container-jfdl1j-2 byHCwx"
        >
          <Gridstyles__Row
            display="flex"
            flexWrap="wrap"
          >
            <StyledComponent
              display="flex"
              flexWrap="wrap"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "display": "flex",
                    "flexWrap": "wrap",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Row-jfdl1j-1",
                    "isStatic": false,
                    "lastClassName": "ihaaWG",
                    "rules": Array [
                      "margin-left:5px;margin-right:5px;",
                      "@media screen and (min-width: 375px)",
                      "{margin-left:10px;margin-right:10px;}",
                      "@media screen and (min-width: 768px)",
                      "{margin-left:40px;margin-right:40px;}",
                      "@media screen and (min-width: 1024px)",
                      "{margin-left:75px;margin-right:75px;}&&{",
                      [Function],
                      "}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Row",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                display="flex"
              >
                <Gridstyles__Column
                  py={
                    Array [
                      20,
                      20,
                      40,
                    ]
                  }
                  width={1}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Column-jfdl1j-0",
                          "isStatic": false,
                          "lastClassName": "jnwtYj",
                          "rules": Array [
                            "padding:10px 5px;",
                            "@media screen and (min-width: 375px)",
                            "{padding:10px;}",
                            "@media screen and (min-width: 1024px)",
                            "{padding:10px 15px;}&&{",
                            [Function],
                            "}",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Column",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Column-jfdl1j-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    py={
                      Array [
                        20,
                        20,
                        40,
                      ]
                    }
                    width={1}
                  >
                    <div
                      className="Gridstyles__Column-jfdl1j-0 jnwtYj"
                      width={1}
                    >
                      <styles__FilterContainerWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "styles__FilterContainerWrapper-kd1mao-0",
                                "isStatic": false,
                                "lastClassName": "kWUFNq",
                                "rules": Array [
                                  "display:flex;flex-wrap:wrap;justify-content:center;",
                                ],
                              },
                              "displayName": "styles__FilterContainerWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "styles__FilterContainerWrapper-kd1mao-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="styles__FilterContainerWrapper-kd1mao-0 kWUFNq"
                          >
                            <FilterLabel
                              filterColour="#all"
                              filterName="all"
                              filterType="radio"
                              handleSelect={[Function]}
                              id="all"
                              isSelected={false}
                              key="all"
                            >
                              <styles__Label
                                backgroundColor="#all"
                                htmlFor="all"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#all"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="all"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 cGlsrw"
                                    htmlFor="all"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          all
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="all"
                                      id="all"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="radio"
                                      value="all"
                                    >
                                      <StyledComponent
                                        aria-label="all"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="all"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="radio"
                                        value="all"
                                      >
                                        <input
                                          aria-label="all"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="all"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="radio"
                                          value="all"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#foo"
                              filterName="foo"
                              filterType="radio"
                              handleSelect={[Function]}
                              id="foo"
                              isSelected={true}
                              key="foo"
                            >
                              <styles__Label
                                backgroundColor="#foo"
                                htmlFor="foo"
                                isSelected={true}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#foo"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="foo"
                                  isSelected={true}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gdJNpr"
                                    htmlFor="foo"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          foo
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="foo"
                                      id="foo"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="radio"
                                      value="foo"
                                    >
                                      <StyledComponent
                                        aria-label="foo"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="foo"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="radio"
                                        value="foo"
                                      >
                                        <input
                                          aria-label="foo"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="foo"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="radio"
                                          value="foo"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                            <FilterLabel
                              filterColour="#bar"
                              filterName="bar"
                              filterType="radio"
                              handleSelect={[Function]}
                              id="bar"
                              isSelected={false}
                              key="bar"
                            >
                              <styles__Label
                                backgroundColor="#bar"
                                htmlFor="bar"
                                isSelected={false}
                                tabIndex="0"
                              >
                                <StyledComponent
                                  backgroundColor="#bar"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "styles__Label-sc-1wu4f6z-0",
                                        "isStatic": false,
                                        "lastClassName": "gBUgEB",
                                        "rules": Array [
                                          "align-items:center;border:2px solid;background-color:",
                                          [Function],
                                          ";border-color:",
                                          [Function],
                                          ";border-radius:4px;color:",
                                          [Function],
                                          ";cursor:pointer;display:flex;font-family:",
                                          "Poppins, sans-serif",
                                          ";font-size:1rem;height:32px;justify-content:center;padding:0 20px;margin-right:10px;margin-bottom:10px;white-space:nowrap;",
                                        ],
                                      },
                                      "displayName": "styles__Label",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "styles__Label-sc-1wu4f6z-0",
                                      "target": "label",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  htmlFor="bar"
                                  isSelected={false}
                                  tabIndex="0"
                                >
                                  <label
                                    className="styles__Label-sc-1wu4f6z-0 gBUgEB"
                                    htmlFor="bar"
                                    tabIndex="0"
                                  >
                                    <styles__Text>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Text-sc-1wu4f6z-1",
                                              "isStatic": false,
                                              "lastClassName": "cywyfl",
                                              "rules": Array [],
                                            },
                                            "displayName": "styles__Text",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Text-sc-1wu4f6z-1",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="styles__Text-sc-1wu4f6z-1 cywyfl"
                                        >
                                          bar
                                        </span>
                                      </StyledComponent>
                                    </styles__Text>
                                    <styles__Input
                                      aria-label="bar"
                                      id="bar"
                                      name="filterLabel"
                                      onClick={[Function]}
                                      tabIndex="-1"
                                      type="radio"
                                      value="bar"
                                    >
                                      <StyledComponent
                                        aria-label="bar"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [
                                              [Function],
                                            ],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "styles__Input-sc-1wu4f6z-2",
                                              "isStatic": false,
                                              "lastClassName": "eKsjNQ",
                                              "rules": Array [
                                                "border: 0;",
                                                "clip: rect(0 0 0 0);",
                                                "height: 1px;",
                                                "margin: -1px;",
                                                "overflow: hidden;",
                                                "padding: 0;",
                                                "position: absolute;",
                                                "white-space: nowrap;",
                                                "width: 1px;",
                                                ";",
                                              ],
                                            },
                                            "displayName": "styles__Input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "styles__Input-sc-1wu4f6z-2",
                                            "target": "input",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="bar"
                                        name="filterLabel"
                                        onClick={[Function]}
                                        tabIndex="-1"
                                        type="radio"
                                        value="bar"
                                      >
                                        <input
                                          aria-label="bar"
                                          className="styles__Input-sc-1wu4f6z-2 eKsjNQ"
                                          id="bar"
                                          name="filterLabel"
                                          onClick={[Function]}
                                          tabIndex="-1"
                                          type="radio"
                                          value="bar"
                                        />
                                      </StyledComponent>
                                    </styles__Input>
                                  </label>
                                </StyledComponent>
                              </styles__Label>
                            </FilterLabel>
                          </div>
                        </StyledComponent>
                      </styles__FilterContainerWrapper>
                    </div>
                  </StyledComponent>
                </Gridstyles__Column>
              </div>
            </StyledComponent>
          </Gridstyles__Row>
        </div>
      </StyledComponent>
    </Gridstyles__Container>
  </FilterContainer>
  <PagedCardContainer
    CardComponent={[Function]}
    cardContent={
      Array [
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo0",
          "text": "text-foo0",
        },
        Object {
          "category": Array [
            "foo",
          ],
          "id": "id-foo2",
          "text": "text-foo2",
        },
      ]
    }
    moreCardsToShow={false}
    onShowMoreButtonClick={[Function]}
    pageSize={6}
    showMoreButtonText="Show more"
  >
    <pagedCardContainer__PaddedCardContainer
      CardComponent={[Function]}
      cardContent={
        Array [
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo0",
            "text": "text-foo0",
          },
          Object {
            "category": Array [
              "foo",
            ],
            "id": "id-foo2",
            "text": "text-foo2",
          },
        ]
      }
      isFullyLoaded={true}
    >
      <StyledComponent
        CardComponent={[Function]}
        cardContent={
          Array [
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo0",
              "text": "text-foo0",
            },
            Object {
              "category": Array [
                "foo",
              ],
              "id": "id-foo2",
              "text": "text-foo2",
            },
          ]
        }
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
              "isStatic": false,
              "lastClassName": "iMbSNm",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "pagedCardContainer__PaddedCardContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "pagedCardContainer__PaddedCardContainer-ymz70m-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        isFullyLoaded={true}
      >
        <CardContainer
          CardComponent={[Function]}
          cardContent={
            Array [
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo0",
                "text": "text-foo0",
              },
              Object {
                "category": Array [
                  "foo",
                ],
                "id": "id-foo2",
                "text": "text-foo2",
              },
            ]
          }
          className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
          isFullyLoaded={true}
        >
          <Gridstyles__Container
            className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
            mx="auto"
          >
            <StyledComponent
              className="pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "_foldedDefaultProps": Object {
                    "mx": "auto",
                  },
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Gridstyles__Container-jfdl1j-2",
                    "isStatic": false,
                    "lastClassName": "byHCwx",
                    "rules": Array [
                      "@media screen and (min-width: 375px)",
                      "{min-width:335px;}",
                      "@media screen and (min-width: 768px)",
                      "{min-width:668px;}",
                      "@media screen and (min-width: 1024px)",
                      "{min-width:960px;}",
                      "@media screen and (min-width: 1440px)",
                      "{min-width:1260px;max-width:",
                      "1440",
                      "px;}",
                      [Function],
                      " ",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "Gridstyles__Container",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Gridstyles__Container-jfdl1j-2",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              mx="auto"
            >
              <div
                className="Gridstyles__Container-jfdl1j-2 byHCwx pagedCardContainer__PaddedCardContainer-ymz70m-0 iMbSNm"
              >
                <Gridstyles__Row
                  display="flex"
                  flexWrap="wrap"
                >
                  <StyledComponent
                    display="flex"
                    flexWrap="wrap"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "_foldedDefaultProps": Object {
                          "display": "flex",
                          "flexWrap": "wrap",
                        },
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Gridstyles__Row-jfdl1j-1",
                          "isStatic": false,
                          "lastClassName": "ihaaWG",
                          "rules": Array [
                            "margin-left:5px;margin-right:5px;",
                            "@media screen and (min-width: 375px)",
                            "{margin-left:10px;margin-right:10px;}",
                            "@media screen and (min-width: 768px)",
                            "{margin-left:40px;margin-right:40px;}",
                            "@media screen and (min-width: 1024px)",
                            "{margin-left:75px;margin-right:75px;}&&{",
                            [Function],
                            "}",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                          ],
                        },
                        "displayName": "Gridstyles__Row",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Gridstyles__Row-jfdl1j-1",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="Gridstyles__Row-jfdl1j-1 ihaaWG"
                      display="flex"
                    >
                      <Gridstyles__FlexColumn
                        key="id-foo0"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo0"
                            >
                              <div>
                                text-foo0
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                      <Gridstyles__FlexColumn
                        key="id-foo2"
                        py={
                          Array [
                            2,
                            2,
                            2,
                            3,
                          ]
                        }
                        width={
                          Array [
                            1,
                            1,
                            0.5,
                            0.3333333333333333,
                          ]
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Gridstyles__FlexColumn-jfdl1j-3",
                                "isStatic": false,
                                "lastClassName": "dwSNFv",
                                "rules": Array [
                                  "padding:10px 5px;",
                                  "@media screen and (min-width: 375px)",
                                  "{padding:10px;}",
                                  "@media screen and (min-width: 1024px)",
                                  "{padding:10px 15px;}&&{",
                                  [Function],
                                  "}",
                                  [Function],
                                  "display:block;",
                                  "@media screen and (min-width: 768px)",
                                  "{display:flex;}",
                                ],
                              },
                              "displayName": "Gridstyles__FlexColumn",
                              "foldedComponentIds": Array [
                                "Gridstyles__Column-jfdl1j-0",
                              ],
                              "render": [Function],
                              "styledComponentId": "Gridstyles__FlexColumn-jfdl1j-3",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          py={
                            Array [
                              2,
                              2,
                              2,
                              3,
                            ]
                          }
                          width={
                            Array [
                              1,
                              1,
                              0.5,
                              0.3333333333333333,
                            ]
                          }
                        >
                          <div
                            className="Gridstyles__Column-jfdl1j-0 Gridstyles__FlexColumn-jfdl1j-3 dwSNFv"
                            width={
                              Array [
                                1,
                                1,
                                0.5,
                                0.3333333333333333,
                              ]
                            }
                          >
                            <CardComponent
                              category={
                                Array [
                                  "foo",
                                ]
                              }
                              text="text-foo2"
                            >
                              <div>
                                text-foo2
                              </div>
                            </CardComponent>
                          </div>
                        </StyledComponent>
                      </Gridstyles__FlexColumn>
                    </div>
                  </StyledComponent>
                </Gridstyles__Row>
              </div>
            </StyledComponent>
          </Gridstyles__Container>
        </CardContainer>
      </StyledComponent>
    </pagedCardContainer__PaddedCardContainer>
  </PagedCardContainer>
</FilteredPagedCardContainer>
`;
